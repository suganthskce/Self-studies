The javax.servlet and javax.servlet.http packages represent interfaces and classes for servlet api.
The javax.servlet package contains many interfaces and classes that are used by the servlet or web container. These are not specific to any protocol.
The javax.servlet.http package contains interfaces and classes that are responsible for http requests only.


----------------------------------------------------------javax.servlet package------------------------------------------------------

Interfaces:
Servlet
ServletRequest
ServletResponse
RequestDispatcher
ServletConfig
ServletContext
SingleThreadModel
Filter
FilterConfig
FilterChain
ServletRequestListener
ServletRequestAttributeListener
ServletContextListener
ServletContextAttributeListener

Classes:
GenericServlet
ServletInputStream
ServletOutputStream
ServletRequestWrapper
ServletResponseWrapper
ServletRequestEvent
ServletContextEvent
ServletRequestAttributeEvent
ServletContextAttributeEvent
ServletException
UnavailableException


-----------------------------------------------javax.servlet.http package--------------------------------------
Interfaces:
HttpServletRequest
HttpServletResponse
HttpSession
HttpSessionListener
HttpSessionAttributeListener
HttpSessionBindingListener
HttpSessionActivationListener
HttpSessionContext (deprecated now)

Classes:
HttpServlet
Cookie
HttpServletRequestWrapper
HttpServletResponseWrapper
HttpSessionEvent
HttpSessionBindingEvent
HttpUtils (deprecated now)

---------------------------------------------------------Servlet Interface----------------------------------
There are 5 methods in Servlet interface. The init, service and destroy are the life cycle methods of servlet. These are invoked by the web container.

Method									Description
public void init(ServletConfig config) ->	initializes the servlet. It is the life cycle method of servlet and invoked by the web container only once.
public void service(ServletRequest request,ServletResponse response)	->  provides response for the incoming request. It is invoked at each request by the web container.
public void destroy() -> 	is invoked only once and indicates that servlet is being destroyed.
public ServletConfig getServletConfig() ->	returns the object of ServletConfig.
public String getServletInfo() ->	returns information about servlet such as writer, copyright, version etc.


------------------------------------------------------------GenericServlet class---------------------------------------------------
GenericServlet class implements Servlet, ServletConfig and Serializable interfaces. It provides the implementation of all the methods of these interfaces except the service method.
GenericServlet class can handle any type of request so it is protocol-independent.
You may create a generic servlet by inheriting the GenericServlet class and providing the implementation of the service method.

-----------------------------------------------HttpServlet class-------------------------------------------------------------
The HttpServlet class extends the GenericServlet class and implements Serializable interface. It provides http specific methods such as doGet, doPost, doHead, doTrace etc.


There are many methods in HttpServlet class. They are as follows:
public void service(ServletRequest req,ServletResponse res) -> dispatches the request to the protected service method by converting the request and response object into http type.
protected void service(HttpServletRequest req, HttpServletResponse res) ->  receives the request from the service method, and dispatches the request to the doXXX() method depending on the incoming http request type.
protected void doGet(HttpServletRequest req, HttpServletResponse res) -> handles the GET request. It is invoked by the web container.
protected void doPost(HttpServletRequest req, HttpServletResponse res) -> handles the POST request. It is invoked by the web container.
protected void doHead(HttpServletRequest req, HttpServletResponse res) -> handles the HEAD request. It is invoked by the web container.
protected void doOptions(HttpServletRequest req, HttpServletResponse res) -> handles the OPTIONS request. It is invoked by the web container.
protected void doPut(HttpServletRequest req, HttpServletResponse res) -> handles the PUT request. It is invoked by the web container.
protected void doTrace(HttpServletRequest req, HttpServletResponse res) -> handles the TRACE request. It is invoked by the web container.
protected void doDelete(HttpServletRequest req, HttpServletResponse res) -> handles the DELETE request. It is invoked by the web container.
protected long getLastModified(HttpServletRequest req) -> returns the time when HttpServletRequest was last modified since midnight January 1, 1970 GMT.


-----------------------------------------------Life cycle of Servlet-----------------------------------------------------

The web container maintains the life cycle of a servlet instance. Let's see the life cycle of the servlet:
<<Servlet_LifeCycle.jpg>>
Servlet class is loaded.
Servlet instance is created.
init method is invoked.
service method is invoked.
destroy method is invoked.








